<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CLEANXCEL2._2.Dictionaries"
                    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/">


    <Style x:Key="SchName" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="10px" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style x:Key="SchSourceName" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="12px" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style x:Key="SchLabel"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF2F63" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="10px" />
        <Setter Property="Width" Value="35px"/>
        <Setter Property="Height" Value="16px"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="MainMenuStyle"
               TargetType="ToggleButton">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="400"
                                Height="100"
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top" 
                                Cursor="Hand"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Width" Value="400"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>


    <Style x:Key="SubMenuStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="200"
                                Height="100"
                                Padding="0,30,0,0"
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Top" 
                                Cursor="Hand"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="MainMenuTitle"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="24px" />
        <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
        <Setter Property="Padding" Value="0,0,0,10"/>
    </Style>

    <Style x:Key="MainMenuDesc"
               TargetType="TextBlock">
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="18px" />
    </Style>

    <Style x:Key="MainMenuName"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#09D8D6" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="24px" />
    </Style>

    <Style x:Key="MainMenuRole"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="16px" />
    </Style>

    <Style x:Key="MainMenuTime"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="12px" />
    </Style>

    <Style x:Key="SubMenuTitle"
               TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="17px" />
        <Setter Property="Padding" Value="0,0,0,5"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Opacity" Value="0.5"/>
    </Style>

    <Style x:Key="SubMenuDesc"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="15px" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Opacity" Value="0.5"/>
    </Style>

    <Style x:Key="DarkBackGroundColor"
               TargetType="DockPanel">
        <Setter Property="Background" Value="#2A313B" />
    </Style>

    <Style x:Key="LightBackGroundColor"
               TargetType="DockPanel">
        <Setter Property="Background" Value="#FFFFFF" />
    </Style>

    <Style x:Key="DarkHeading1"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Th" />
        <Setter Property="FontSize" Value="48px" />
    </Style>

    <Style x:Key="DarkSubHeading1"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="26px" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <Style x:Key="LightSubHeading1"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="26px" />
        <Setter Property="Opacity" Value="1" />
    </Style>

    <Style x:Key="DarkContent"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <Style x:Key="DarkLabel"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Margin" Value="0,0,0,10" />
    </Style>

    <Style x:Key="LightLabel"
               TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Margin" Value="0,0,0,10" />
    </Style>

    <Style x:Key="FocusEffect" 
               TargetType="DockPanel">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DarkTextBox" 
               TargetType="TextBox">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="0,0,0,1"
                                HorizontalAlignment="Left"
                                Width="350"
                                BorderBrush="#2A313B">
                        <TextBox Padding="16,0,0,0" 
                                     Background="#FFFFFF"
                                     Foreground="#2A313B"
                                     BorderThickness="0"
                                     Height="30"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="#2A313B" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontSize" Value="18px" />

    </Style>

    <Style x:Key="LightTextBox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush"  Value="#FFFFFF" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Background" Value="#2A313B" />
        <Setter Property="Padding" Value="16,0,0,0" />
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="Width" Value="350"/>

    </Style>

    <!--Control colors.-->
    <Color x:Key="ControlNormalColor">#FF2A313B</Color>
    <Color x:Key="ControlMouseOverColor">#00AF93</Color>
    <!--<Color x:Key="ControlMouseOverColor">#FF09D8D6</Color>-->
    <Color x:Key="DisabledControlColor">#FFF2F2F2</Color>
    <Color x:Key="DisabledForegroundColor">#FFBFBFBF</Color>
    <Color x:Key="ControlPressedColor">#00AF93</Color>
    <!--<Color x:Key="ControlPressedColor">#FF09D8D6</Color>-->

    <!-- FocusVisual -->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" StrokeThickness="0" Stroke="#60000000" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="BtnSubmit" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="60px" />
        <Setter Property="MinWidth"  Value="103px" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border">
                        <Border.Background>
                            <SolidColorBrush  Color="{DynamicResource ControlNormalColor}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Control colors.-->
    <Color x:Key="LightControlNormalColor">#FFFFFFFF</Color>
    <Color x:Key="LightControlMouseOverColor">#FF09D8D6</Color>
    <Color x:Key="LightDisabledControlColor">#FFF2F2F2</Color>
    <Color x:Key="LightDisabledForegroundColor">#FFBFBFBF</Color>
    <Color x:Key="LightControlPressedColor">#FF09D8D6</Color>

    <!-- FocusVisual -->

    <Style x:Key="LightButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" StrokeThickness="0" Stroke="#60FFFFFF" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="BtnLogin" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource LightButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="60px" />
        <Setter Property="MinWidth"  Value="103px" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Proxima Nova Lt" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="Foreground" Value="#FF2A313B" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border">
                        <Border.Background>
                            <SolidColorBrush  Color="{DynamicResource LightControlNormalColor}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightDisabledControlColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource LightDisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EqButtonsDefault"
               TargetType="ToggleButton">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonUS">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Ultrasonic_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Ultrasonic.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Ultrasonic_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Ultrasonic_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonDoor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Door_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Door.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Door_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Door_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonHeater">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Heater_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Heater.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Heater_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Heater_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonRefrigerator">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Refrigerator_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Refrigerator.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Refrigerator_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Refrigerator_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonPump">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Pump_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Pump.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Pump_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_Pump_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonAirValve">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_AirValve_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_AirValve.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_AirValve_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_AirValve_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonSolenoidValve">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_SolenoidValve_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_SolenoidValve.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_SolenoidValve_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_SolenoidValve_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonPistonValve">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve_Disabled.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="StyleToggleButtonPistonValveInverse">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve_Active.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <svgc:SvgViewbox Source="/Images/Schematic/Equipments_PistonValve_Inactive.svg"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>